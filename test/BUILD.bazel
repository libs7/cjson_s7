load("@rules_cc//cc:defs.bzl", "cc_test")

load("@libs7//:BUILD.bzl",
     "BASE_SRCS", "BASE_DEPS", "BASE_INCLUDE_PATHS",
     "BASE_COPTS", "BASE_DEFINES", "BASE_LINKOPTS")
     # "CJSON_S7_VERSION")

load("//:BUILD.bzl",
     "GOPT_VERSION",
     "UNITY_VERSION",
     "UTHASH_VERSION")

SRCS          = BASE_SRCS + [
    "common.c", "common.h",
    "@libs7//src:libs7.h"
]

INCLUDE_PATHS = BASE_INCLUDE_PATHS + [
    "-Isrc",
    "-Iexternal/gopt~{}/src".format(GOPT_VERSION),
    "-Iexternal/unity~{}/src".format(UNITY_VERSION),
    "-Iexternal/uthash~{}/src".format(UTHASH_VERSION)
]
COPTS         = BASE_COPTS + INCLUDE_PATHS
DEPS          = BASE_DEPS + [
    "//src:cjson_s7",
    "@libs7//src:s7", # always statically link libs7 for tests???
    "@gopt//:gopt",
    "@unity//src:unity",
    "@uthash//src:uthash",
]
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS

TIMEOUT = "short"

TAGS = ["json"]

################################################################
test_suite(
    name  = "test",
    tests = [
        ":array_to_scm",
        ":arrays",
        ":readers",
        ":map_to_scm",
        ":maps",
        # ":strings",
    ]
)

################################################################
cc_test(
    name = "array_to_scm",
    linkstatic = True,
    srcs = SRCS + ["json_array_to_scm_test.c"],
    local_defines = DEFINES,
    deps = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout = TIMEOUT,
    tags = TAGS + ["arrays", "conversion"]
)

cc_test(
    name = "arrays",
    linkstatic = True,
    srcs = SRCS + ["json_arrays_test.c"],
    local_defines = DEFINES,
    deps = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout = TIMEOUT,
    tags = TAGS + ["arrays"]
)

cc_test(
    name = "map_to_scm",
    linkstatic = True,
    srcs = SRCS + ["json_map_to_scm_test.c"],
    local_defines = DEFINES,
    deps = DEPS + [
        # "//dev",
        # "//lib/libjson:json_s7"
    ],
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout = TIMEOUT,
    tags = TAGS + ["maps", "conversion"]
)

cc_test(
    name = "maps",
    linkstatic = True,
    srcs = SRCS + ["json_maps_test.c"],
    local_defines = DEFINES,
    deps = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout = TIMEOUT,
    tags = TAGS + ["maps"]
)

cc_test(
    name = "readers",
    linkstatic = True,
    srcs = SRCS + ["json_readers_test.c"],
    local_defines = DEFINES,
    deps = DEPS,
    data = ["//test/data:json"],
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout = TIMEOUT,
    tags = TAGS + ["readers"]
)

# cc_test(
#     name = "work",
#     linkstatic = True,
#     srcs = ["json_work_test.c",
#             "//test/unit:common.c", "//test/unit:common.h",
#             "//src:libs7.h"],
#     local_defines = DEFINES,
#     deps = DEPS + [
#         "//dev",
#         # "//lib/libjson:json_s7"
#     ],
#     copts = COPTS + [
#         "-Isrc",
#         "-Idev",
#         "-Itest/unit",
#         "-I$(GENDIR)/lib/libjson",
#         "-I$(GENDIR)/external/libs7/lib/libjson",
#         # "-fno-pie"
#     ],
#     linkopts = LINKOPTS,
#     timeout = TIMEOUT,
#     tags = TAGS + ["maps"]
# )

# # cc_test(
# #     name = "strings",
# #     linkstatic = True,
# #     srcs = ["json_strings_test.c",
# #             "//test/unit:common.c", "//test/unit:common.h",
# #             "//src:libs7.h"],
# #     local_defines = DEFINES,
# #     data = ["//test/unit/libjson/data:strings.json"],
# #     deps = DEPS + [
# #         "//dev",
# #         "//src:s7",
# #         "//lib/libjson:json_s7"
# #     ],
# #     copts = COPTS + [
# #         "-Isrc",
# #         "-Idev",
# #         "-Itest/unit",
# #         "-I$(GENDIR)/lib/libjson",
# #         "-I$(GENDIR)/external/libs7/lib/libjson",
# #         # "-fno-pie"
# #     ],
# #     linkopts = LINKOPTS,
# #     timeout = TIMEOUT
# # )

